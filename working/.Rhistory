setVector
setVector
setUnion
setUnion
setMatrix == 1
setMatrix == "a"
s2 <- c("a","a","b","b","e")
s2 <- c{"a","a","b","b","e"}
s2 <- {"a","a","b","b","e"}
s2 <- unique("a","a","b","b","e")
?unique
s2 <- unique(c("a","a","b","b","e"))
s2
setUnion
length(setUnion)
?matrix
matrix(nrow=length(setUnion), ncol=(length(setMatrix)))
length(setMatrix)
cols(setMatrix)
col(setMatrix)
numcol(setMatrix)
dim(setMatrix)
dim(setMatrix)[1]
dim(setMatrix)[2]
setMatrix
setMatrix[1]
setMatrix[,1]
setMatrix[1,]
setMatrix[,1] <- 1 if 1 > 0
setMatrix[,1] <- 1 if (1 > 0)
setMatrix[,1] <- 1
setMatrix
setMatrix <- 0
setMatrix
cols(setMatrix)
setMatrix[] <-  0
setMatrix
cbind(setUnion, setMatrix)
matrixRes
setList
setList[1]
setList[2]
matrixRes[,1]
matrixRes[2,1] if(matrixRes[2,1] in setList[1]){1}
matrixRes[2,1] <- ifelse(matrixRes[2,1] in setList[1], 1, 0)
matrixRes[2,1] <- ifelse(matrixRes[2,1] %in% setList[1], 1, 0)
matrixRes
matrixRes[2,1] <- "b"
matrixRes
matrixRes[1,2] <- ifelse(matrixRes[2,1] %in% setList[1], 1, 0)
matrixRes
matrixRes[1,2] <- ifelse(matrixRes[1,1] %in% setList[1], 1, 0)
matrixRes
matrixRes[1,2] <- 1
matrixRes
matrixRes[1,2] <- 0
matrixRes
s1
ex <- s1
ex
ex[3] <- "f"
ex
s1
ex[intersect(ex,s1)] <- 1
ex
ex <- s1
ex
s1
ex[3] <- "f"
ex
s1
ex == s1
ex[ex == s1] <- 1
ex
ex[ex != s1] <- 0
ex
ex <- s1
ex[3] <- "f"
ex
ex[ex == s1] <- 1,0
setsToMatrix(matrixRes, setList)
matrixRes[,1 == "a"] <- 1
matrixRes
matrix[,1]
matrixRes[,1]
matrixRes[,1] == "a"
s1 <- unique(c("a","b","c","d","e"))
s1[s1 == "a"]
s1 == "a"
s1 == "a" <- 1
s1[s1 == "a"] <- 1
s1
s1[s1 != "1"] <- 0
s1
q()
n
